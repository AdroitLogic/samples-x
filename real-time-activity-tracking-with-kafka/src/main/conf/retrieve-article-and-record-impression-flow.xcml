<x:flow id="retrieve-article-and-record-impression-flow" type="integrationFlow"
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:x="http://www.adroitlogic.org/x/x-flow"
        xsi:schemaLocation="http://www.adroitlogic.org/x/x-flow http://schemas.adroitlogic.org/x/x-flow-1.0.0.xsd
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <x:components>

        <bean id="news-http-listener" class="org.adroitlogic.x.connector.http.nio.NIOHttpIngressConnector">
            <property name="processingElement" ref="newsId-query-param-extractor"/>
            <property name="zeroCopyEnabled" value="true"/>
            <property name="path" value="/hogwarts/news"/>
            <property name="noCompression" value="false"/>
            <property name="continueOnCheckedExceptions" value="false"/>
            <property name="port" value="8280"/>
            <property name="continueOnRuntimeExceptions" value="true"/>
            <property name="enableConnectionDebug" value="true"/>
        </bean>
        <bean id="newsId-query-param-extractor"
              class="org.adroitlogic.x.processor.http.nio.query.ExtractQueryParameter">
            <property name="nextElement" ref="news-article-payload-setter"/>
            <property name="variableName" value="key"/>
            <property name="name" value="newsId"/>
        </bean>
        <bean id="news-article-payload-setter" class="org.adroitlogic.x.processor.payload.SetPayloadFromString">
            <property name="nextElement" ref="news-kafka-reporter"/>
            <property name="stringPayload"
                      value="&lt;message&gt;&lt;id&gt;@{variable.key}&lt;/id&gt;&lt;article&gt;During the 1997-1998 school year, Amycus Carrow was appointed Defence Against the Dark Arts Professor at Hogwarts, and changed the subject to just Dark Arts. The seventh years learned how to cast the Cruciatus Curse (which was to be practised on students who earned detention), and possibly how to conjure Fiendfyre and other Unforgivable Curses; Vincent Crabbe and Gregory Goyle were said to be top students due to their inclination to cruelty. However, Crabbe apparently did not pay attention to how to control or stop Fiendfyre, which was what led to his demise later that year.&lt;/article&gt;&lt;/message&gt;"/>
        </bean>
        <bean id="news-kafka-reporter" class="org.adroitlogic.x.connector.kafka.KafkaEgressConnector">
            <property name="responseProcessor" ref="news-cors-header-adder"/>
            <property name="reconnectBackOff" value="50"/>
            <property name="maxBlockMillis" value="60000"/>
            <property name="includeHeaders" value="false"/>
            <property name="compressionType" value="none"/>
            <property name="metricsRecordingLevel" value="INFO"/>
            <property name="receiveBufferBytes" value="32768"/>
            <property name="metadataMaxAge" value="300000"/>
            <property name="connectionMaxIdleMillis" value="540000"/>
            <property name="sslTruststoreType" value="JKS"/>
            <property name="metricsSampleCount" value="2"/>
            <property name="sendBufferBytes" value="131072"/>
            <property name="acks" value="ALL"/>
            <property name="sslKeystoreType" value="JKS"/>
            <property name="saslMechanism" value="GSSAPI"/>
            <property name="retries" value="0"/>
            <property name="enabledSSLProtocols" value="TLSv1.2,TLSv1.1,TLSv1"/>
            <property name="kerberosMinTimeBeforeRelogin" value="60000"/>
            <property name="sslProtocol" value="TLS"/>
            <property name="sslKeymanagerAlgorithm" value="SunX509"/>
            <property name="partitionerClass" value="org.apache.kafka.clients.producer.internals.DefaultPartitioner"/>
            <property name="kerberosKinitCommand" value="/usr/bin/kinit"/>
            <property name="retryBackOff" value="100"/>
            <property name="reconnectBackOffMax" value="1000"/>
            <property name="requestTimeoutMillis" value="30000"/>
            <property name="securityProtocol" value="PLAINTEXT"/>
            <property name="bootstrapServers"
                      value="${retrieve-article-and-record-impression-flow.news-kafka-reporter.bootstrapServers}"/>
            <property name="enableIdempotency" value="false"/>
            <property name="lingerMillis" value="0"/>
            <property name="keyType" value="SEQUENTIAL"/>
            <property name="transactionTimeoutMillis" value="60000"/>
            <property name="kerberosTicketRenewWindowFactor" value="0.8"/>
            <property name="maxRequestSize" value="1048576"/>
            <property name="maxInFlightRequestsPerConnection" value="5"/>
            <property name="kerberosTicketRenewJitter" value="0.05"/>
            <property name="async" value="false"/>
            <property name="bufferMemory" value="33554432"/>
            <property name="topicName"
                      value="${retrieve-article-and-record-impression-flow.news-kafka-reporter.topicName}"/>
            <property name="globalKeySequencing" value="false"/>
            <property name="batchSize" value="16384"/>
            <property name="metricsSampleWindow" value="30000"/>
        </bean>
        <bean id="news-cors-header-adder" class="org.adroitlogic.x.processor.header.AddNewTransportHeader">
            <property name="useVariable" value="false"/>
            <property name="headerName" value="Access-Control-Allow-Origin"/>
            <property name="propagateToParent" value="true"/>
            <property name="value" value="*"/>
            <property name="headerVarType" value="String"/>
            <property name="nextElement" ref="news-http-listener"/>
        </bean>
    </x:components>

    <x:layout>

        <x:position id="news-http-listener" xPos="320.0" yPos="160.0" angle="0.0"
                    elementType="ResponseIngressConnector"/>
        <x:position id="newsId-query-param-extractor" xPos="480.0" yPos="160.0" angle="0.0"
                    elementType="ProcessingElement"/>
        <x:position id="news-article-payload-setter" xPos="640.0" yPos="160.0" angle="0.0"
                    elementType="ProcessingElement"/>
        <x:position id="news-kafka-reporter" xPos="800.0" yPos="160.0" angle="0.0" elementType="EgressConnector"/>
        <x:position id="news-cors-header-adder" xPos="800.0" yPos="240.0" angle="180.0" elementType="ProcessingElement"/>
    </x:layout>


</x:flow>