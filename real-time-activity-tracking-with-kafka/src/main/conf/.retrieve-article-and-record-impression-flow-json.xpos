{"cells":[{"type":"ResponseIngressConnector","position":{"x":320,"y":160},"size":{"width":80,"height":80},"inPorts":["Response"],"outPorts":[{"id":"Processor","targetElementType":"ProcessingElement","description":"Returns the message received to the Ingress Connector","sourceFieldName":"processingElement"},{"id":"On Exception","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}],"sidePorts":[],"angle":0,"id":"3585bd1a-9444-45ab-816e-1a529d9494ad","displayName":"NIO HTTP Ingress Connector","className":"org.adroitlogic.x.connector.http.nio.NIOHttpIngressConnector","componentId":"news-http-listener","componentType":"ResponseIngressConnector","icon":"nio_http_ingress_connector","configurationRequired":true,"z":1,"fieldsList":[[{"name":"_componentId","typeAsString":"java.lang.String","displayName":"Component Id","order":"0","inputType":"TEXT_BOX","description":"Id of the component","placeHolder":"","validator":".*","currentValue":"news-http-listener","originalValue":"news-http-listener","isExternalized":false,"category":"Basic","propertyName":"","isOptional":false,"possibleValues":[],"isDisabled":true,"hideOnDependentPropValue":{},"showOnDependentPropValue":{},"dependentPropertyName":"","isHidden":false},{"name":"port","typeAsString":"int","displayName":"Http port","order":1,"inputType":"TEXT_BOX","description":"Port to listen on","placeHolder":"Specify the port","validator":"^\\d{2,6}$","currentValue":"8280","originalValue":"8280","isExternalized":false,"category":"Basic","propertyName":"port","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"path","typeAsString":"java.lang.String","displayName":"Service path","order":2,"inputType":"TEXT_BOX","description":"Service path to register this connector","placeHolder":"Specify the service path","validator":".*","currentValue":"/hogwarts/news","originalValue":"/hogwarts/news","isExternalized":false,"category":"Basic","propertyName":"path","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"responseTimeout","typeAsString":"long","displayName":"Response Timeout","order":20,"inputType":"TEXT_BOX","description":"Timeout in milliseconds after which the request timeouts","placeHolder":"","validator":"^[0-9]*$","currentValue":"","originalValue":"","isExternalized":false,"category":"Advanced","propertyName":"responseTimeout","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"ioThreadCounts","typeAsString":"int","displayName":"IO thread count","order":3,"inputType":"TEXT_BOX","description":"Number of IO Threads to be assigned to accept http requests","placeHolder":"Specify the number of IO Threads to be assigned to accept http requests","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Transport Configuration","propertyName":"ioThreadCounts","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"bindAddress","typeAsString":"java.lang.String","displayName":"Local bind address","order":4,"inputType":"TEXT_BOX","description":"The local bind address. If not specified, binds on all interfaces by default","placeHolder":"Specify the local bind address","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Transport Configuration","propertyName":"bindAddress","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"enableConnectionDebug","typeAsString":"boolean","displayName":"Connection debugging enabled","order":5,"inputType":"CHECK_BOX","description":"Whether connection debugging is enabled","placeHolder":"","validator":".*","currentValue":"true","originalValue":"true","isExternalized":false,"category":"Transport Configuration","propertyName":"enableConnectionDebug","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"connectionDebugHeaders","typeAsString":"java.util.Set","displayName":"Connection debug headers","order":6,"inputType":"TEXT_BOX","description":"A comma separated list of HTTP headers to be dumped on a connection failure, when connection debugging is enabled. Specify as 'all' to dump all headers or as 'none' to prevent dumping of headers.","placeHolder":"A comma separated list of HTTP headers or 'all' or 'none'","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Transport Configuration","propertyName":"connectionDebugHeaders","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"allowedMethods","typeAsString":"java.util.Set","displayName":"Allowed HTTP methods","order":7,"inputType":"MULTIPLE_SELECT","description":"The HTTP methods allowed for requests processed via this listener (multiple methods can be selected)","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Transport Configuration","propertyName":"allowedMethods","isOptional":true,"possibleValues":["GET","HEAD","POST","PUT","PATCH","DELETE","OPTIONS","TRACE"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"zeroCopyEnabled","typeAsString":"boolean","displayName":"Zero copy enabled","order":8,"inputType":"CHECK_BOX","description":"Whether zero copying is enabled","placeHolder":"","validator":".*","currentValue":"true","originalValue":"true","isExternalized":false,"category":"Transport Configuration","propertyName":"zeroCopyEnabled","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"noCompression","typeAsString":"boolean","displayName":"Turn off response compression","order":9,"inputType":"CHECK_BOX","description":"Whether to turn off the use of Gzip compression even if the request contains an Accept-Encoding header","placeHolder":"","validator":".*","currentValue":"false","originalValue":"false","isExternalized":false,"category":"Transport Configuration","propertyName":"noCompression","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"compressionMinSize","typeAsString":"long","displayName":"Compressing trigger size","order":10,"inputType":"TEXT_BOX","description":"The minimum size of a response (in bytes) to trigger compression, if supported by the client. Default value is 2K bytes","placeHolder":"The minimum size of a response (in bytes) to trigger compression","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Transport Configuration","propertyName":"compressionMinSize","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"continueOnRuntimeExceptions","typeAsString":"boolean","displayName":"Continue on runtime exceptions","order":11,"inputType":"CHECK_BOX","description":"Whether the engine should continue execution on the occurrence of a runtime exception. If set to false, engine will shutdown and restart on such a situation","placeHolder":"","validator":".*","currentValue":"true","originalValue":"true","isExternalized":false,"category":"Transport Configuration","propertyName":"continueOnRuntimeExceptions","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"continueOnCheckedExceptions","typeAsString":"boolean","displayName":"Continue on checked exceptions","order":12,"inputType":"CHECK_BOX","description":"Whether the engine should continue execution on the occurrence of a checked exception. If set to false, engine will shutdown and restart on such a situation","placeHolder":"","validator":".*","currentValue":"false","originalValue":"false","isExternalized":false,"category":"Transport Configuration","propertyName":"continueOnCheckedExceptions","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"stopNewConnectionsAt","typeAsString":"int","displayName":"Stop new connections at soft limit","order":13,"inputType":"TEXT_BOX","description":"The connection limit on which the reactor should pause accepting new connections. Default value is 4096. In reality this limit maybe surpassed. This is a soft limit and will not grantee the correctness at very high concurrent scenarios","placeHolder":"Specify the connection limit to pause accepting new connections","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Transport Configuration","propertyName":"stopNewConnectionsAt","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"resumeNewConnectionsAt","typeAsString":"int","displayName":"Resume new connections at soft limit","order":14,"inputType":"TEXT_BOX","description":"The connection limit on which the reactor should resume accepting new connections. Default value is 3072. Value of this limit should be less than 'Stop new connections at soft limit'. This is a soft limit and will not grantee the correctness at very high concurrent scenarios","placeHolder":"Specify the connections limit to resume accepting new connections","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Transport Configuration","propertyName":"resumeNewConnectionsAt","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"maxPayloadSize","typeAsString":"long","displayName":"Maximum payload size","order":15,"inputType":"TEXT_BOX","description":"The maximum payload size to accept (in bytes). Default value is 1MB.","placeHolder":"Specify the maximum payload size to accept","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Transport Configuration","propertyName":"maxPayloadSize","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"properties","typeAsString":"java.util.Map","displayName":"Tuning parameters","order":16,"inputType":"STRING_MAP","description":"Specify a map of HTTP tuning parameters","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Transport Configuration","propertyName":"properties","isOptional":true,"possibleValues":["http.socket.timeout","http.connection.timeout","http.tcp.nodelay","http.tcp.reuseaddr","http.jvm.interest-ops-queued","http.socket.buffer-size","http.connection.max-line-length","http.connection.max-header-count"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}]],"attrs":{".label":{"text":"","ref-y":0.3},"image":{"ref-x":0,"ref-y":0,"width":80,"height":80,"xlink:href":"https://developer.adroitlogic.com/ultrastudio/icons/default/nio_http_ingress_connector.svg","transform":"rotate(-0.0 40 40)"},".component-tooltip":{"text":"NIO HTTP Ingress Connector"},".inPorts>.port0>.port-label":{"text":""},".inPorts>.port0>.port-body":{"port":{"id":"in10","type":"in"}},".inPorts>.port0":{"ref":".body","ref-y":0.8333333333333333,"ref-dx":0},".outPorts>.port0>.port-label":{"text":""},".outPorts>.port0>.port-tooltip":{"text":"Processor"},".outPorts>.port0>.port-body":{"port":{"id":"Processor","type":"out","targetElementType":"ProcessingElement","description":"Returns the message received to the Ingress Connector","sourceFieldName":"processingElement"}},".outPorts>.port0":{"ref":".body","ref-y":0.16666666666666666,"ref-dx":0},".outPorts>.port1>.port-label":{"text":""},".outPorts>.port1>.port-tooltip":{"text":"On Exception"},".outPorts>.port1>.port-body":{"port":{"id":"On Exception","type":"out","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}},".outPorts>.port1":{"ref":".body","ref-y":0.5,"ref-dx":0}}},{"type":"EgressConnector","position":{"x":800,"y":160},"size":{"width":80,"height":80},"inPorts":["Input"],"outPorts":[{"id":"Response Processor","targetElementType":"ProcessingElement","description":"Returns the message received as the response from the external system","sourceFieldName":"responseProcessor"},{"id":"On Exception","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}],"sidePorts":[{"id":"Connector Operation","targetElementType":"ConnectorOperation","description":"Specify the Connector operation for the Egress Connector","sourceFieldName":"operation"}],"angle":0,"id":"7e45a0ab-9d9b-44f8-aae1-7c1c46facfd2","displayName":"Kafka Egress Connector","className":"org.adroitlogic.x.connector.kafka.KafkaEgressConnector","componentId":"news-kafka-reporter","componentType":"EgressConnector","icon":"kafka_egress_connector","configurationRequired":true,"z":2,"fieldsList":[[{"name":"_componentId","typeAsString":"java.lang.String","displayName":"Component Id","order":"0","inputType":"TEXT_BOX","description":"Id of the component","placeHolder":"","validator":".*","currentValue":"news-kafka-reporter","originalValue":"news-kafka-reporter","isExternalized":false,"category":"Basic","propertyName":"","isOptional":false,"possibleValues":[],"isDisabled":true,"hideOnDependentPropValue":{},"showOnDependentPropValue":{},"dependentPropertyName":"","isHidden":false},{"name":"bootstrapServers","typeAsString":"java.lang.String","displayName":"Bootstrap Servers","order":1,"inputType":"TEXT_BOX","description":"A comma separated list of bootstrap server hostname:port pairs for the producer to connect to Kafka","placeHolder":"localhost:9092","validator":".*","currentValue":"localhost:9092","originalValue":"localhost:9092","isExternalized":true,"category":"Basic","propertyName":"bootstrap.servers","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"topicName","typeAsString":"java.lang.String","displayName":"Topic Name","order":2,"inputType":"TEXT_BOX","description":"The name of the topic to which the messages are sent","placeHolder":"","validator":".*","currentValue":"XNewsTopic","originalValue":"XNewsTopic","isExternalized":true,"category":"Basic","propertyName":"topicName","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"keyType","typeAsString":"org.adroitlogic.x.connector.kafka.KafkaEgressConnector.ValueType","displayName":"Key Type","order":3,"inputType":"SELECT","description":"The type of the key to be used for sending","placeHolder":"","validator":".*","currentValue":"SEQUENTIAL","originalValue":"SEQUENTIAL","isExternalized":false,"category":"Basic","propertyName":"key.type","isOptional":false,"possibleValues":["SEQUENTIAL","EXPRESSION","VALUE"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"keyPrefix","typeAsString":"java.lang.String","displayName":"Key Prefix","order":4,"inputType":"TEXT_BOX","description":"This will be prepended to the auto generated sequence number to determine the key","placeHolder":"global_","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Basic","propertyName":"key.prefix","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"keyType","isHidden":false,"showOnDependentPropValue":{"SEQUENTIAL":true},"hideOnDependentPropValue":{}},{"name":"globalKeySequencing","typeAsString":"boolean","displayName":"Global Sequencing","order":5,"inputType":"CHECK_BOX","description":"Whether the sequence number for the sequential key is global (across the cluster) or local","placeHolder":"","validator":".*","currentValue":"false","originalValue":"false","isExternalized":false,"category":"Basic","propertyName":"key.globalSequencing","isOptional":true,"possibleValues":["true","false"],"isDisabled":false,"dependentPropertyName":"keyType","isHidden":false,"showOnDependentPropValue":{"SEQUENTIAL":true},"hideOnDependentPropValue":{}},{"name":"keyValue","typeAsString":"java.lang.String","displayName":"Key Value","order":6,"inputType":"TEXT_BOX","description":"Static key value to be used to send the message to the desired partition of the topic","placeHolder":"my_sample_key","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Basic","propertyName":"key.value","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"keyType","isHidden":true,"showOnDependentPropValue":{"VALUE":true},"hideOnDependentPropValue":{}},{"name":"keyExpression","typeAsString":"java.lang.String","displayName":"Key Expression","order":7,"inputType":"TEXT_BOX","description":"Expression out of which the key will be derived","placeHolder":"${header:X_KEY}","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Basic","propertyName":"key.expression","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"keyType","isHidden":true,"showOnDependentPropValue":{"EXPRESSION":true},"hideOnDependentPropValue":{}},{"name":"includeHeaders","typeAsString":"boolean","displayName":"Include Headers","order":8,"inputType":"CHECK_BOX","description":"Whether to include headers of the message into the Kafka message sent","placeHolder":"","validator":".*","currentValue":"false","originalValue":"false","isExternalized":false,"category":"Basic","propertyName":"includeHeaders","isOptional":false,"possibleValues":["true","false"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"async","typeAsString":"boolean","displayName":"Send Asynchronously","order":9,"inputType":"CHECK_BOX","description":"Whether the sending mode is asynchronous, if disabled waits for the ACKs to complete the send","placeHolder":"","validator":".*","currentValue":"false","originalValue":"false","isExternalized":false,"category":"Basic","propertyName":"async","isOptional":false,"possibleValues":["true","false"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"acks","typeAsString":"org.adroitlogic.x.connector.kafka.KafkaACK","displayName":"Acknowledgements","order":10,"inputType":"SELECT","description":"Acknowledgements config controls the criteria under which requests are considered complete. Value ALL means the leader will wait for the full set of in-sync replicas to acknowledge the record. This guarantees that the record will not be lost as long as at least one in-sync replica remains alive. Value LEADER means the leader will write the record to its local log but will respond without awaiting full acknowledgement from all followers. In this case should the leader fail immediately after acknowledging the record but before the followers have replicated it then the record will be lost. Value NONE means producer will not wait for any acknowledgment from the server at all. The record will be immediately added to the socket buffer and considered sent.","placeHolder":"","validator":".*","currentValue":"ALL","originalValue":"ALL","isExternalized":false,"category":"Basic","propertyName":"acks","isOptional":true,"possibleValues":["ALL","LEADER","NONE"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"retries","typeAsString":"int","displayName":"Retry Count","order":11,"inputType":"TEXT_BOX","description":"Number of re-tries if the request fails, specifying retries as 0 makes it not retry any message failure. Enabling retries also opens up the possibility of duplicates","placeHolder":"0","validator":"^\\d{1,10}$","currentValue":"0","originalValue":"0","isExternalized":false,"category":"Basic","propertyName":"retries","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"clientId","typeAsString":"java.lang.String","displayName":"Client Id","order":12,"inputType":"TEXT_BOX","description":"An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Basic","propertyName":"client.id","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"transactionalIdValue","typeAsString":"java.lang.String","displayName":"Transactional Id Value","order":13,"inputType":"TEXT_BOX","description":"The TransactionalId to use for transactional delivery. This enables reliability semantics which span multiple producer sessions since it allows the client to guarantee that transactions using the same TransactionalId have been completed prior to starting any new transactions.","placeHolder":"TID153","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Basic","propertyName":"transactional.id","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"enableIdempotency","typeAsString":"boolean","displayName":"Idempotency","order":14,"inputType":"CHECK_BOX","description":"When set to 'true', the producer will ensure that exactly one copy of each message is written in the stream. If 'false', producer retries due to broker failures, etc., may write duplicates of the retried message in the stream. This is set to 'false' by default. Note that enabling idempotence requires max.in.flight.requests.per.connection to be set to 1 and retries cannot be zero. Additionally acks must be set to 'all'. If these values are left at their defaults, we will override the default to be suitable. If the values are set to something incompatible with the idempotent producer, a ConfigException will be thrown","placeHolder":"","validator":".*","currentValue":"false","originalValue":"false","isExternalized":false,"category":"Basic","propertyName":"enable.idempotence","isOptional":true,"possibleValues":["true","false"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"bufferMemory","typeAsString":"long","displayName":"Buffer Memory","order":20,"inputType":"TEXT_BOX","description":"This specifies the total amount of memory available to the producer for buffering.","placeHolder":"33,554,432","validator":"^\\d{1,19}$","currentValue":"33554432","originalValue":"33554432","isExternalized":false,"category":"Advanced","propertyName":"buffer.memory","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"egressTimeout","typeAsString":"long","displayName":"Egress Timeout","order":20,"inputType":"TEXT_BOX","description":"Timeout in milliseconds after which the egress message timeouts","placeHolder":"","validator":"^[0-9]*$","currentValue":"","originalValue":"","isExternalized":false,"category":"Advanced","propertyName":"egressTimeout","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"weight","typeAsString":"int","displayName":"Weight","order":20,"inputType":"TEXT_BOX","description":"Weight of the Egress endpoint when used with a Load Balancer","placeHolder":"","validator":"^[1-9]\\d*$","currentValue":"","originalValue":"","isExternalized":false,"category":"Advanced","propertyName":"weight","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"compressionType","typeAsString":"java.lang.String","displayName":"Compression Type","order":21,"inputType":"SELECT","description":"The compression type for all data generated by the producer. The default is none (i.e. no compression). Compression is of full batches of data, so the efficacy of batching will also impact the compression ratio (more batching means better compression)","placeHolder":"","validator":".*","currentValue":"none","originalValue":"none","isExternalized":false,"category":"Advanced","propertyName":"compression.type","isOptional":true,"possibleValues":["none","gzip","snappy","lz4"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"batchSize","typeAsString":"int","displayName":"Batch Size","order":22,"inputType":"TEXT_BOX","description":"Buffer size to batch requests on a per partition basis","placeHolder":"16,384","validator":"^\\d{1,10}$","currentValue":"16384","originalValue":"16384","isExternalized":false,"category":"Advanced","propertyName":"batch.size","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"lingerMillis","typeAsString":"long","displayName":"Linger in Milliseconds","order":23,"inputType":"TEXT_BOX","description":"The producer groups together any records that arrive in between request transmissions into a single batched request. Normally this occurs only under load when records arrive faster than they can be sent out. However in some circumstances the client may want to reduce the number of requests even under moderate load. This setting accomplishes this by adding a small amount of artificial delay—that is, rather than immediately sending out a record the producer will wait for up to the given delay to allow other records to be sent so that the sends can be batched together. This can be thought of as analogous to Nagle's algorithm in TCP.","placeHolder":"0","validator":"^\\d{1,19}$","currentValue":"0","originalValue":"0","isExternalized":false,"category":"Advanced","propertyName":"linger.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"maxBlockMillis","typeAsString":"long","displayName":"Maximum Block in Milliseconds","order":24,"inputType":"TEXT_BOX","description":"The threshold for time to block for sending, after which it throws a TimeoutException","placeHolder":"60,000","validator":"^\\d{1,19}$","currentValue":"60000","originalValue":"60000","isExternalized":false,"category":"Advanced","propertyName":"max.block.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"interceptorClasses","typeAsString":"java.lang.String","displayName":"Interceptor Classes","order":25,"inputType":"TEXT_BOX","description":"A list of classes to use as interceptors. Implementing the ProducerInterceptor interface allows you to intercept (and possibly mutate) records received by the producer","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Advanced","propertyName":"interceptor.classes","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"metadataMaxAge","typeAsString":"long","displayName":"Metadata Max Age","order":26,"inputType":"TEXT_BOX","description":"The period of time in milliseconds after which we force a refresh of metadata even if we haven't seen any partition leadership changes to proactively discover any new brokers or partitions","placeHolder":"300000","validator":".*","currentValue":"300000","originalValue":"300000","isExternalized":false,"category":"Advanced","propertyName":"metadata.max.age.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"partitionerClass","typeAsString":"java.lang.String","displayName":"Partitioner Class","order":27,"inputType":"TEXT_BOX","description":"Partitioner class that implements the Partitioner interface","placeHolder":"org.apache.kafka.clients.producer.internals.DefaultPartitioner","validator":".*","currentValue":"org.apache.kafka.clients.producer.internals.DefaultPartitioner","originalValue":"org.apache.kafka.clients.producer.internals.DefaultPartitioner","isExternalized":false,"category":"Advanced","propertyName":"partitioner.class","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"kerberosServiceName","typeAsString":"java.lang.String","displayName":"Kerberos Service Name","order":80,"inputType":"TEXT_BOX","description":"The Kerberos principal name that Kafka runs as","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.service.name","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"kerberosKinitCommand","typeAsString":"java.lang.String","displayName":"Kerberos KInit Command","order":81,"inputType":"TEXT_BOX","description":"Kerberos kinit command path","placeHolder":"/usr/bin/kinit","validator":".*","currentValue":"/usr/bin/kinit","originalValue":"/usr/bin/kinit","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.kinit.cmd","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"kerberosMinTimeBeforeRelogin","typeAsString":"long","displayName":"Kerberos Minimum Time Before Re-login","order":82,"inputType":"TEXT_BOX","description":"Login thread sleep time in milliseconds between refresh attempts","placeHolder":"60,000","validator":".*","currentValue":"60000","originalValue":"60000","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.min.time.before.relogin","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"kerberosTicketRenewJitter","typeAsString":"double","displayName":"Kerberos Ticket Renew Jitter","order":83,"inputType":"TEXT_BOX","description":"Percentage of random jitter added to the renewal time","placeHolder":"0.05","validator":".*","currentValue":"0.05","originalValue":"0.05","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.ticket.renew.jitter","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"kerberosTicketRenewWindowFactor","typeAsString":"double","displayName":"Kerberos Ticket Renew Window Factor","order":84,"inputType":"TEXT_BOX","description":"Login thread will sleep until the specified window factor of time from last refresh to ticket's expiry has been reached, at which time it will try to renew the ticket","placeHolder":"0.8","validator":".*","currentValue":"0.8","originalValue":"0.8","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.ticket.renew.window.factor","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"metricsReporters","typeAsString":"java.lang.String","displayName":"Metrics Reporters","order":120,"inputType":"TEXT_BOX","description":"A list of classes to use as metrics reporters. Implementing the MetricReporter interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Metrics","propertyName":"metric.reporters","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"metricsSampleCount","typeAsString":"int","displayName":"Sample Count","order":121,"inputType":"TEXT_BOX","description":"The number of samples maintained to compute metrics","placeHolder":"2","validator":".*","currentValue":"2","originalValue":"2","isExternalized":false,"category":"Metrics","propertyName":"metrics.num.samples","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"metricsRecordingLevel","typeAsString":"java.lang.String","displayName":"Recording Level","order":122,"inputType":"SELECT","description":"The highest recording level for metrics","placeHolder":"","validator":".*","currentValue":"INFO","originalValue":"INFO","isExternalized":false,"category":"Metrics","propertyName":"metrics.recording.level","isOptional":true,"possibleValues":["INFO","DEBUG"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"metricsSampleWindow","typeAsString":"long","displayName":"Sample Window","order":123,"inputType":"TEXT_BOX","description":"The window of time a metrics sample is computed over","placeHolder":"30000","validator":".*","currentValue":"30000","originalValue":"30000","isExternalized":false,"category":"Metrics","propertyName":"metrics.sample.window.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"requestTimeoutMillis","typeAsString":"int","displayName":"Request Timeout","order":50,"inputType":"TEXT_BOX","description":"The configuration controls the maximum amount of time in milliseconds the client will wait for the response of a request","placeHolder":"30000","validator":".*","currentValue":"30000","originalValue":"30000","isExternalized":false,"category":"Network","propertyName":"request.timeout.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"transactionTimeoutMillis","typeAsString":"int","displayName":"Transaction Timeout","order":51,"inputType":"TEXT_BOX","description":"The maximum amount of time in milliseconds that the transaction coordinator will wait for a transaction status update from the producer before proactively aborting the ongoing transaction","placeHolder":"60,000","validator":".*","currentValue":"60000","originalValue":"60000","isExternalized":false,"category":"Network","propertyName":"transaction.timeout.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"connectionMaxIdleMillis","typeAsString":"long","displayName":"Connection Maximum Idle Time","order":52,"inputType":"TEXT_BOX","description":"Close idle connections after the number of milliseconds specified by this config","placeHolder":"540000","validator":".*","currentValue":"540000","originalValue":"540000","isExternalized":false,"category":"Network","propertyName":"connections.max.idle.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"maxRequestSize","typeAsString":"int","displayName":"Maximum Request Size","order":53,"inputType":"TEXT_BOX","description":"The maximum size of a request in bytes. This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests. This is also effectively a cap on the maximum record batch size.","placeHolder":"1048576","validator":".*","currentValue":"1048576","originalValue":"1048576","isExternalized":false,"category":"Network","propertyName":"max.request.size","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"receiveBufferBytes","typeAsString":"int","displayName":"Receive Buffer Size","order":54,"inputType":"TEXT_BOX","description":"The size of the TCP receive buffer (SO_RCVBUF) in bytes to use when reading data. If the value is -1, the OS default will be used","placeHolder":"32768","validator":".*","currentValue":"32768","originalValue":"32768","isExternalized":false,"category":"Network","propertyName":"receive.buffer.bytes","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sendBufferBytes","typeAsString":"int","displayName":"Send Buffer Size","order":55,"inputType":"TEXT_BOX","description":"The size of the TCP send buffer (SO_SNDBUF) in bytes to use when sending data. If the value is -1, the OS default will be used","placeHolder":"131072","validator":".*","currentValue":"131072","originalValue":"131072","isExternalized":false,"category":"Network","propertyName":"send.buffer.bytes","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"reconnectBackOff","typeAsString":"long","displayName":"Reconnect Back-Off","order":56,"inputType":"TEXT_BOX","description":"The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker","placeHolder":"50","validator":".*","currentValue":"50","originalValue":"50","isExternalized":false,"category":"Network","propertyName":"reconnect.backoff.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"reconnectBackOffMax","typeAsString":"long","displayName":"Maximum Reconnect Back-Off","order":57,"inputType":"TEXT_BOX","description":"The maximum amount of time in milliseconds to wait when re-connecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms","placeHolder":"1000","validator":".*","currentValue":"1000","originalValue":"1000","isExternalized":false,"category":"Network","propertyName":"reconnect.backoff.max.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"retryBackOff","typeAsString":"long","displayName":"Retry Back-Off","order":58,"inputType":"TEXT_BOX","description":"The amount of time in milliseconds to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios","placeHolder":"100","validator":".*","currentValue":"100","originalValue":"100","isExternalized":false,"category":"Network","propertyName":"retry.backoff.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"maxInFlightRequestsPerConnection","typeAsString":"int","displayName":"Maximum In-Flight Requests per Connection","order":59,"inputType":"TEXT_BOX","description":"The maximum number of unacknowledged requests the client will send on a single connection before blocking. Note that if this setting is set to be greater than 1 and there are failed sends, there is a risk of message re-ordering due to retries","placeHolder":"5","validator":".*","currentValue":"5","originalValue":"5","isExternalized":false,"category":"Network","propertyName":"max.in.flight.requests.per.connection","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"sslTruststoreLocation","typeAsString":"java.lang.String","displayName":"Trust Keystore Location","order":100,"inputType":"TEXT_BOX","description":"The location of the trust store file used for two-way authentication for client","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.truststore.location","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslTruststorePassword","typeAsString":"java.lang.String","displayName":"Trust Keystore Password","order":101,"inputType":"SECURE","description":"The password for the trust store file","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.truststore.password","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslTruststoreType","typeAsString":"java.lang.String","displayName":"Trust Keystore Type","order":102,"inputType":"TEXT_BOX","description":"The file format of the trust store file","placeHolder":"JKS","validator":".*","currentValue":"JKS","originalValue":"JKS","isExternalized":false,"category":"SSL","propertyName":"ssl.truststore.type","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeystoreLocatin","typeAsString":"java.lang.String","displayName":"Identity Keystore Location","order":103,"inputType":"TEXT_BOX","description":"The location of the key store file used for two-way authentication for client","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.keystore.location","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeystorePassword","typeAsString":"java.lang.String","displayName":"Identity Keystore Password","order":104,"inputType":"SECURE","description":"The store password for the key store file","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.keystore.password","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeystoreType","typeAsString":"java.lang.String","displayName":"Identity Keystore Type","order":105,"inputType":"TEXT_BOX","description":"The file format of the key store file","placeHolder":"JKS","validator":".*","currentValue":"JKS","originalValue":"JKS","isExternalized":false,"category":"SSL","propertyName":"ssl.keystore.type","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeyPassword","typeAsString":"java.lang.String","displayName":"Identity Key Password","order":106,"inputType":"SECURE","description":"The password of the private key in the key store file","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.key.password","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"enabledSSLProtocols","typeAsString":"java.lang.String","displayName":"Enabled SSL Protocols","order":107,"inputType":"TEXT_BOX","description":"The list of protocols enabled for SSL connections as a comma separated list from TLSv1, TLSv1.1 and TLSv1.2, SSLv1, SSLv2 and SSLv3.","placeHolder":"TLSv1.2,TLSv1.1,TLSv1","validator":".*","currentValue":"TLSv1.2,TLSv1.1,TLSv1","originalValue":"TLSv1.2,TLSv1.1,TLSv1","isExternalized":false,"category":"SSL","propertyName":"ssl.enabled.protocols","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslProtocol","typeAsString":"java.lang.String","displayName":"SSL Protocol","order":108,"inputType":"TEXT_BOX","description":"The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.","placeHolder":"TLS","validator":".*","currentValue":"TLS","originalValue":"TLS","isExternalized":false,"category":"SSL","propertyName":"ssl.protocol","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslProvider","typeAsString":"java.lang.String","displayName":"SSL Provider","order":109,"inputType":"TEXT_BOX","description":"The name of the security provider used for SSL connections. Default value is the default security provider of the JVM","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.provider","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslCipherSuites","typeAsString":"java.lang.String","displayName":"SSL Cipher Suites","order":110,"inputType":"TEXT_BOX","description":"A comma separated list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.cipher.suites","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslEndpointIdentificationAlgorithm","typeAsString":"java.lang.String","displayName":"Endpoint Identification Algorithm","order":111,"inputType":"TEXT_BOX","description":"The endpoint identification algorithm to validate server hostname using server certificate","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.endpoint.identification.algorithm","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeymanagerAlgorithm","typeAsString":"java.lang.String","displayName":"Keymanager Algorithm","order":112,"inputType":"TEXT_BOX","description":"The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine","placeHolder":"SunX509","validator":".*","currentValue":"SunX509","originalValue":"SunX509","isExternalized":false,"category":"SSL","propertyName":"ssl.keymanager.algorithm","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslTrustmanagerAlgorithm","typeAsString":"java.lang.String","displayName":"Trustmanager Algorithm","order":113,"inputType":"TEXT_BOX","description":"The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.trustmanager.algorithm","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslSecureRandomImplementation","typeAsString":"java.lang.String","displayName":"Secure Random Implementation","order":114,"inputType":"TEXT_BOX","description":"The SecureRandom PRNG implementation to use for SSL cryptography operations","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.secure.random.implementation","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"securityProtocol","typeAsString":"java.lang.String","displayName":"Security Protocol","order":70,"inputType":"SELECT","description":"Security protocol used to communicate with brokers","placeHolder":"","validator":".*","currentValue":"PLAINTEXT","originalValue":"PLAINTEXT","isExternalized":false,"category":"Security","propertyName":"security.protocol","isOptional":true,"possibleValues":["PLAINTEXT","SSL","SASL_PLAINTEXT","SASL_SSL"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"saslMechanism","typeAsString":"java.lang.String","displayName":"SASL Mechanism","order":71,"inputType":"TEXT_BOX","description":"SASL mechanism used for client connections. This may be any mechanism for which a security provider is available","placeHolder":"GSSAPI","validator":".*","currentValue":"GSSAPI","originalValue":"GSSAPI","isExternalized":false,"category":"Security","propertyName":"sasl.mechanism","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"jaasConfig","typeAsString":"java.lang.String","displayName":"JAAS Config","order":72,"inputType":"SECURE","description":"JAAS login context parameters for SASL connections in the format used by JAAS configuration files","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Security","propertyName":"sasl.jaas.config","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}]],"attrs":{".label":{"text":"","ref-y":0.3},"image":{"ref-x":0,"ref-y":0,"width":80,"height":80,"xlink:href":"https://developer.adroitlogic.com/ultrastudio/icons/default/kafka_egress_connector.svg","transform":"rotate(-0.0 40 40)"},".component-tooltip":{"text":"Kafka Egress Connector"},".inPorts>.port0>.port-label":{"text":""},".inPorts>.port0>.port-body":{"port":{"id":"in15","type":"in"}},".inPorts>.port0":{"ref":".body","ref-y":0.5},".outPorts>.port0>.port-label":{"text":""},".outPorts>.port0>.port-tooltip":{"text":"Response Processor"},".outPorts>.port0>.port-body":{"port":{"id":"Response Processor","type":"out","targetElementType":"ProcessingElement","description":"Returns the message received as the response from the external system","sourceFieldName":"responseProcessor"}},".outPorts>.port0":{"ref":".body","ref-y":0.25,"ref-dx":0},".outPorts>.port1>.port-label":{"text":""},".outPorts>.port1>.port-tooltip":{"text":"On Exception"},".outPorts>.port1>.port-body":{"port":{"id":"On Exception","type":"out","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}},".outPorts>.port1":{"ref":".body","ref-y":0.75,"ref-dx":0},".sidePorts>.port0>.port-label":{"text":""},".sidePorts>.port0>.port-tooltip":{"text":"Connector Operation"},".sidePorts>.port0>.port-body":{"port":{"id":"Connector Operation","type":"side","targetElementType":"ConnectorOperation","description":"Specify the Connector operation for the Egress Connector","sourceFieldName":"operation"}},".sidePorts>.port0":{"ref":".body","ref-y":0.99,"ref-x":0.5}}},{"type":"ProcessingElement","position":{"x":640,"y":160},"size":{"width":80,"height":80},"inPorts":["Input"],"outPorts":[{"id":"Next","targetElementType":"ProcessingElement","description":"Next processing element","sourceFieldName":"nextElement"},{"id":"On Exception","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}],"sidePorts":[],"angle":0,"id":"eb2bbd3e-13e7-4bbf-9caf-c7ddd7471966","displayName":"String Payload Setter","className":"org.adroitlogic.x.processor.payload.SetPayloadFromString","componentId":"news-article-payload-setter","componentType":"ProcessingElement","icon":"string_payload_setter","configurationRequired":true,"z":3,"fieldsList":[[{"name":"_componentId","typeAsString":"java.lang.String","displayName":"Component Id","order":"0","inputType":"TEXT_BOX","description":"Id of the component","placeHolder":"","validator":".*","currentValue":"news-article-payload-setter","originalValue":"news-article-payload-setter","isExternalized":false,"category":"Basic","propertyName":"","isOptional":false,"possibleValues":[],"isDisabled":true,"hideOnDependentPropValue":{},"showOnDependentPropValue":{},"dependentPropertyName":"","isHidden":false},{"name":"stringPayload","typeAsString":"java.lang.String","displayName":"String Payload","order":1,"inputType":"TEXT_BOX","description":"String value to be set as the current payload of the message. This can be a plain text static string or any combination of @{message.headers.<name>}, @{message.properties.<name>}, @{variable.<name>}, @{current.timestamp.<timestamp_format>} and @{message.id}","placeHolder":"","validator":".*","currentValue":"<message><id>@{variable.key}</id><article>During the 1997-1998 school year, Amycus Carrow was appointed Defence Against the Dark Arts Professor at Hogwarts, and changed the subject to just Dark Arts. The seventh years learned how to cast the Cruciatus Curse (which was to be practised on students who earned detention), and possibly how to conjure Fiendfyre and other Unforgivable Curses; Vincent Crabbe and Gregory Goyle were said to be top students due to their inclination to cruelty. However, Crabbe apparently did not pay attention to how to control or stop Fiendfyre, which was what led to his demise later that year.</article></message>","originalValue":"<message><id>@{variable.key}</id><article>During the 1997-1998 school year, Amycus Carrow was appointed Defence Against the Dark Arts Professor at Hogwarts, and changed the subject to just Dark Arts. The seventh years learned how to cast the Cruciatus Curse (which was to be practised on students who earned detention), and possibly how to conjure Fiendfyre and other Unforgivable Curses; Vincent Crabbe and Gregory Goyle were said to be top students due to their inclination to cruelty. However, Crabbe apparently did not pay attention to how to control or stop Fiendfyre, which was what led to his demise later that year.</article></message>","isExternalized":false,"category":"Basic","propertyName":"stringPayload","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}]],"attrs":{".label":{"text":"","ref-y":0.3},"image":{"ref-x":0,"ref-y":0,"width":80,"height":80,"xlink:href":"https://developer.adroitlogic.com/ultrastudio/icons/default/string_payload_setter.svg","transform":"rotate(-0.0 40 40)"},".component-tooltip":{"text":"String Payload Setter"},".inPorts>.port0>.port-label":{"text":""},".inPorts>.port0>.port-body":{"port":{"id":"in20","type":"in"}},".inPorts>.port0":{"ref":".body","ref-y":0.5},".outPorts>.port0>.port-label":{"text":""},".outPorts>.port0>.port-tooltip":{"text":"Next"},".outPorts>.port0>.port-body":{"port":{"id":"Next","type":"out","targetElementType":"ProcessingElement","description":"Next processing element","sourceFieldName":"nextElement"}},".outPorts>.port0":{"ref":".body","ref-y":0.25,"ref-dx":0},".outPorts>.port1>.port-label":{"text":""},".outPorts>.port1>.port-tooltip":{"text":"On Exception"},".outPorts>.port1>.port-body":{"port":{"id":"On Exception","type":"out","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}},".outPorts>.port1":{"ref":".body","ref-y":0.75,"ref-dx":0}}},{"type":"ProcessingElement","position":{"x":480,"y":160},"size":{"width":80,"height":80},"inPorts":["Input"],"outPorts":[{"id":"Next","targetElementType":"ProcessingElement","description":"Next processing element","sourceFieldName":"nextElement"},{"id":"On Exception","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}],"sidePorts":[],"angle":0,"id":"497859f6-a6b6-422f-a815-4e596817c451","displayName":"Extract HTTP query parameter","className":"org.adroitlogic.x.processor.http.nio.query.ExtractQueryParameter","componentId":"newsId-query-param-extractor","componentType":"ProcessingElement","icon":"extract_http_query_param","configurationRequired":true,"z":4,"fieldsList":[[{"name":"_componentId","typeAsString":"java.lang.String","displayName":"Component Id","order":"0","inputType":"TEXT_BOX","description":"Id of the component","placeHolder":"","validator":".*","currentValue":"newsId-query-param-extractor","originalValue":"newsId-query-param-extractor","isExternalized":false,"category":"Basic","propertyName":"","isOptional":false,"possibleValues":[],"isDisabled":true,"hideOnDependentPropValue":{},"showOnDependentPropValue":{},"dependentPropertyName":"","isHidden":false},{"name":"name","typeAsString":"java.lang.String","displayName":"Query parameter name","order":1,"inputType":"TEXT_BOX","description":"The name of the HTTP query parameter to be removed","placeHolder":"","validator":".*","currentValue":"id","originalValue":"newsId","isExternalized":false,"category":"Basic","propertyName":"name","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"variableName","typeAsString":"java.lang.String","displayName":"Variable Name","order":1,"inputType":"TEXT_BOX","description":"Variable name to store extracted value from the message","placeHolder":"","validator":".*","currentValue":"key","originalValue":"key","isExternalized":false,"category":"Basic","propertyName":"variableName","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}]],"attrs":{".label":{"text":"","ref-y":0.3},"image":{"ref-x":0,"ref-y":0,"width":80,"height":80,"xlink:href":"https://developer.adroitlogic.com/ultrastudio/icons/default/extract_http_query_param.svg","transform":"rotate(-0.0 40 40)"},".component-tooltip":{"text":"Extract HTTP query parameter"},".inPorts>.port0>.port-label":{"text":""},".inPorts>.port0>.port-body":{"port":{"id":"in25","type":"in"}},".inPorts>.port0":{"ref":".body","ref-y":0.5},".outPorts>.port0>.port-label":{"text":""},".outPorts>.port0>.port-tooltip":{"text":"Next"},".outPorts>.port0>.port-body":{"port":{"id":"Next","type":"out","targetElementType":"ProcessingElement","description":"Next processing element","sourceFieldName":"nextElement"}},".outPorts>.port0":{"ref":".body","ref-y":0.25,"ref-dx":0},".outPorts>.port1>.port-label":{"text":""},".outPorts>.port1>.port-tooltip":{"text":"On Exception"},".outPorts>.port1>.port-body":{"port":{"id":"On Exception","type":"out","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}},".outPorts>.port1":{"ref":".body","ref-y":0.75,"ref-dx":0}}},{"type":"ProcessingElement","position":{"x":800,"y":240},"size":{"width":80,"height":80},"inPorts":["Input"],"outPorts":[{"id":"Next","targetElementType":"ProcessingElement","description":"Next processing element","sourceFieldName":"nextElement"},{"id":"On Exception","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}],"sidePorts":[],"angle":180,"id":"c54167cd-53be-4b08-839d-841fbf9a90f5","displayName":"Add New Transport Header","className":"org.adroitlogic.x.processor.header.AddNewTransportHeader","componentId":"news-cors-header-adder","componentType":"ProcessingElement","icon":"add_new_transport_header","configurationRequired":true,"z":5,"fieldsList":[[{"name":"_componentId","typeAsString":"java.lang.String","displayName":"Component Id","order":"0","inputType":"TEXT_BOX","description":"Id of the component","placeHolder":"","validator":".*","currentValue":"news-cors-header-adder","originalValue":"news-cors-header-adder","isExternalized":false,"category":"Basic","propertyName":"","isOptional":false,"possibleValues":[],"isDisabled":true,"hideOnDependentPropValue":{},"showOnDependentPropValue":{},"dependentPropertyName":"","isHidden":false},{"name":"headerName","typeAsString":"java.lang.String","displayName":"Transport Header Name","order":3,"inputType":"TEXT_BOX","description":"Name of the transport header","placeHolder":"X_ROUTING","validator":".*","currentValue":"Access-Control-Allow-Origin","originalValue":"Access-Control-Allow-Origin","isExternalized":false,"category":"Basic","propertyName":"headerName","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"useVariable","typeAsString":"boolean","displayName":"Use Variable","order":4,"inputType":"CHECK_BOX","description":"Whether to use a value from a variable","placeHolder":"","validator":".*","currentValue":"false","originalValue":"false","isExternalized":false,"category":"Basic","propertyName":"useVariable","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"value","typeAsString":"java.lang.String","displayName":"Value","order":5,"inputType":"TEXT_BOX","description":"Enter value of the transport header to set value manually or enter the scope variable name to extract the value from variable","placeHolder":"true","validator":".*","currentValue":"*","originalValue":"*","isExternalized":false,"category":"Basic","propertyName":"value","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"headerVarType","typeAsString":"org.adroitlogic.x.api.processor.VariableType","displayName":"Header Variable Type","order":6,"inputType":"SELECT","description":"Type of the variable","placeHolder":"","validator":".*","currentValue":"String","originalValue":"String","isExternalized":false,"category":"Basic","propertyName":"headerVarType","isOptional":false,"possibleValues":["Boolean","Integer","Long","Float","Double","String"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"propagateToParent","typeAsString":"boolean","displayName":"Propagate Variable Search","order":7,"inputType":"CHECK_BOX","description":"Whether to propagate variable search to parent. Only relevant when value for the header is to be extracted from a scope variable.","placeHolder":"","validator":".*","currentValue":"true","originalValue":"true","isExternalized":false,"category":"Basic","propertyName":"propagateToParent","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}]],"attrs":{".label":{"text":"","ref-y":0.3},"image":{"ref-x":0,"ref-y":0,"width":80,"height":80,"xlink:href":"https://developer.adroitlogic.com/ultrastudio/icons/default/add_new_transport_header.svg","transform":"rotate(-180.0 40 40)"},".component-tooltip":{"text":"Add New Transport Header"},".inPorts>.port0>.port-label":{"text":""},".inPorts>.port0>.port-body":{"port":{"id":"in30","type":"in"}},".inPorts>.port0":{"ref":".body","ref-y":0.5},".outPorts>.port0>.port-label":{"text":""},".outPorts>.port0>.port-tooltip":{"text":"Next"},".outPorts>.port0>.port-body":{"port":{"id":"Next","type":"out","targetElementType":"ProcessingElement","description":"Next processing element","sourceFieldName":"nextElement"}},".outPorts>.port0":{"ref":".body","ref-y":0.25,"ref-dx":0},".outPorts>.port1>.port-label":{"text":""},".outPorts>.port1>.port-tooltip":{"text":"On Exception"},".outPorts>.port1>.port-body":{"port":{"id":"On Exception","type":"out","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}},".outPorts>.port1":{"ref":".body","ref-y":0.75,"ref-dx":0}}},{"type":"link","source":{"id":"497859f6-a6b6-422f-a815-4e596817c451","port":"Next"},"target":{"id":"eb2bbd3e-13e7-4bbf-9caf-c7ddd7471966","port":"in20"},"router":{"name":"manhattan"},"connector":{"name":"rounded"},"id":"40c20c9f-70e5-4b85-b455-fe255c00b20c","embeds":"","z":6,"attrs":{".marker-target":{"d":"M 10 0 L 0 5 L 10 10 z"},".connection":{"stroke":"#95a5a6","stroke-width":1}}},{"type":"link","source":{"id":"eb2bbd3e-13e7-4bbf-9caf-c7ddd7471966","port":"Next"},"target":{"id":"7e45a0ab-9d9b-44f8-aae1-7c1c46facfd2","port":"in15"},"router":{"name":"manhattan"},"connector":{"name":"rounded"},"id":"8f2709ee-de4a-49f4-847c-db01cbe9f5e1","embeds":"","z":7,"attrs":{".marker-target":{"d":"M 10 0 L 0 5 L 10 10 z"},".connection":{"stroke":"#95a5a6","stroke-width":1}}},{"type":"link","source":{"id":"7e45a0ab-9d9b-44f8-aae1-7c1c46facfd2","port":"Response Processor"},"target":{"id":"c54167cd-53be-4b08-839d-841fbf9a90f5","port":"in30"},"router":{"name":"manhattan"},"connector":{"name":"rounded"},"id":"9f6ed9bd-c3cf-41db-a00e-3e0b951d9380","embeds":"","z":8,"attrs":{".marker-target":{"d":"M 10 0 L 0 5 L 10 10 z"},".connection":{"stroke":"#95a5a6","stroke-width":1}}},{"type":"link","source":{"id":"c54167cd-53be-4b08-839d-841fbf9a90f5","port":"Next"},"target":{"id":"3585bd1a-9444-45ab-816e-1a529d9494ad","port":"in10"},"router":{"name":"manhattan"},"connector":{"name":"rounded"},"id":"7503a33d-e1df-4f6e-8c7e-6fa784bf2833","embeds":"","z":9,"attrs":{".marker-target":{"d":"M 10 0 L 0 5 L 10 10 z"},".connection":{"stroke":"#95a5a6","stroke-width":1}}},{"type":"link","source":{"id":"3585bd1a-9444-45ab-816e-1a529d9494ad","port":"Processor"},"target":{"id":"497859f6-a6b6-422f-a815-4e596817c451","port":"in25"},"router":{"name":"manhattan"},"connector":{"name":"rounded"},"id":"45b23bd0-3e2b-44d8-a5d2-a365f2452bbc","embeds":"","z":10,"attrs":{".marker-target":{"d":"M 10 0 L 0 5 L 10 10 z"},".connection":{"stroke":"#95a5a6","stroke-width":1}}}]}