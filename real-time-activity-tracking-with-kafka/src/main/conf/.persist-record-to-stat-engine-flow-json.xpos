{"cells":[{"type":"IngressConnector","position":{"x":400,"y":240},"size":{"width":80,"height":80},"inPorts":[],"outPorts":[{"id":"Processor","targetElementType":"ProcessingElement","description":"Returns the message received to the Ingress Connector","sourceFieldName":"processingElement"},{"id":"On Exception","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}],"sidePorts":[],"angle":0,"id":"51dc01de-80a7-42e0-b4c9-a24be8a349c4","displayName":"Kafka Ingress Connector","className":"org.adroitlogic.x.connector.kafka.KafkaIngressConnector","componentId":"news-kafka-listener","componentType":"IngressConnector","icon":"kafka_ingress_connector","configurationRequired":true,"z":1,"fieldsList":[[{"name":"_componentId","typeAsString":"java.lang.String","displayName":"Component Id","order":"0","inputType":"TEXT_BOX","description":"Id of the component","placeHolder":"","validator":".*","currentValue":"news-kafka-listener","originalValue":"news-kafka-listener","isExternalized":false,"category":"Basic","propertyName":"","isOptional":false,"possibleValues":[],"isDisabled":true,"hideOnDependentPropValue":{},"showOnDependentPropValue":{},"dependentPropertyName":"","isHidden":false},{"name":"bootstrapServers","typeAsString":"java.lang.String","displayName":"Bootstrap Servers","order":1,"inputType":"TEXT_BOX","description":"A comma separated list of bootstrap server hostname:port pairs for the consumer(s) to connect to Kafka","placeHolder":"localhost:9092","validator":".*","currentValue":"localhost:9092","originalValue":"localhost:9092","isExternalized":true,"category":"Basic","propertyName":"bootstrap.servers","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"topicName","typeAsString":"java.lang.String","displayName":"Topic Name","order":2,"inputType":"TEXT_BOX","description":"The name of the topic from which the messages are read/consumed","placeHolder":"","validator":".*","currentValue":"XNewsTopic","originalValue":"XNewsTopic","isExternalized":true,"category":"Basic","propertyName":"topicName","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"groupId","typeAsString":"java.lang.String","displayName":"Group Id","order":3,"inputType":"TEXT_BOX","description":"The consumer group id of the Kafka consumer. If this value is not specified, a group id will be assigned as \"grp_<project_id>_<flow_id>_<connector_bean_name>\"","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Basic","propertyName":"group.id","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"clientId","typeAsString":"java.lang.String","displayName":"Client Id","order":4,"inputType":"TEXT_BOX","description":"An id string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Basic","propertyName":"client.id","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"consumerCount","typeAsString":"int","displayName":"Consumer Count","order":10,"inputType":"TEXT_BOX","description":"Number of concurrent consumer threads","placeHolder":"1","validator":".*","currentValue":"1","originalValue":"1","isExternalized":false,"category":"Advanced","propertyName":"consumerCount","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"enableAutoCommit","typeAsString":"boolean","displayName":"Commit Automatically","order":11,"inputType":"CHECK_BOX","description":"Whether offsets are committed automatically with a frequency controlled by the Auto Commit Interval","placeHolder":"","validator":".*","currentValue":"true","originalValue":"true","isExternalized":false,"category":"Advanced","propertyName":"enable.auto.commit","isOptional":true,"possibleValues":["true","false"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"autoCommitIntervalMillis","typeAsString":"int","displayName":"Auto Commit Interval","order":12,"inputType":"TEXT_BOX","description":"The interval in milliseconds at which the offsets are committed, if the Auto Commits are enabled","placeHolder":"5000","validator":".*","currentValue":"5000","originalValue":"5000","isExternalized":false,"category":"Advanced","propertyName":"auto.commit.interval.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"autoOffsetRest","typeAsString":"org.adroitlogic.x.connector.kafka.KafkaOffsetReset","displayName":"Auto Offset Reset","order":13,"inputType":"SELECT","description":"What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server (e.g. because that data has been deleted)","placeHolder":"","validator":".*","currentValue":"LATEST","originalValue":"LATEST","isExternalized":false,"category":"Advanced","propertyName":"auto.offset.reset","isOptional":true,"possibleValues":["EARLIEST","LATEST","NONE","ERROR"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"excludeInternalTopic","typeAsString":"boolean","displayName":"Exclude Internal Topics","order":14,"inputType":"CHECK_BOX","description":"Whether records from internal topics (such as offsets) should be exposed to the consumer. If set to true the only way to receive records from an internal topic is subscribing to it","placeHolder":"","validator":".*","currentValue":"true","originalValue":"true","isExternalized":false,"category":"Advanced","propertyName":"exclude.internal.topics","isOptional":true,"possibleValues":["true","false"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"isolationLevel","typeAsString":"org.adroitlogic.x.connector.kafka.KafkaIsolationLevel","displayName":"Isolation Level","order":15,"inputType":"SELECT","description":"Controls how to read messages written transactionally","placeHolder":"","validator":".*","currentValue":"READ_UNCOMMITTED","originalValue":"READ_UNCOMMITTED","isExternalized":false,"category":"Advanced","propertyName":"isolation.level","isOptional":true,"possibleValues":["READ_COMMITTED","READ_UNCOMMITTED"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"maxPollInterval","typeAsString":"int","displayName":"Maximum Poll Interval","order":16,"inputType":"TEXT_BOX","description":"The maximum delay in milliseconds between invocations of poll when using consumer group management","placeHolder":"300000","validator":".*","currentValue":"300000","originalValue":"300000","isExternalized":false,"category":"Advanced","propertyName":"max.poll.interval.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"maxPollRecords","typeAsString":"int","displayName":"Maximum Poll Records","order":17,"inputType":"TEXT_BOX","description":"The maximum number of records returned in a single call to poll","placeHolder":"500","validator":".*","currentValue":"500","originalValue":"500","isExternalized":false,"category":"Advanced","propertyName":"max.poll.records","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"partitionAssignmentStrategy","typeAsString":"java.lang.String","displayName":"Partition Assignment Strategy","order":18,"inputType":"TEXT_BOX","description":"The class name of the partition assignment strategy that the client will use to distribute partition ownership amongst consumer instances when group management is used","placeHolder":"org.apache.kafka.clients.consumer.RangeAssignor","validator":".*","currentValue":"org.apache.kafka.clients.consumer.RangeAssignor","originalValue":"org.apache.kafka.clients.consumer.RangeAssignor","isExternalized":false,"category":"Advanced","propertyName":"","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"checkCRCS","typeAsString":"boolean","displayName":"Automatically Check CRC32","order":19,"inputType":"CHECK_BOX","description":"Automatically check the CRC32 of the records consumed. This ensures no on-the-wire or on-disk corruption to the messages occurred. This check adds some overhead, so it may be disabled in cases seeking extreme performance","placeHolder":"","validator":".*","currentValue":"true","originalValue":"true","isExternalized":false,"category":"Advanced","propertyName":"check.crcs","isOptional":true,"possibleValues":["true","false"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"interceptorClasses","typeAsString":"java.lang.String","displayName":"Interceptor Classes","order":20,"inputType":"TEXT_BOX","description":"A comma separated list of classes to use as interceptors. Implementing the ConsumerInterceptor interface allows you to intercept (and possibly mutate) records received by the consumer","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Advanced","propertyName":"interceptor.classes","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"metadataMaxAge","typeAsString":"long","displayName":"Metadata Maximum Age","order":21,"inputType":"TEXT_BOX","description":"The period of time in milliseconds after which we force a refresh of metadata even if we haven't seen any partition leadership changes to proactively discover any new brokers or partitions","placeHolder":"300000","validator":".*","currentValue":"300000","originalValue":"300000","isExternalized":false,"category":"Advanced","propertyName":"metadata.max.age.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"kerberosServiceName","typeAsString":"java.lang.String","displayName":"Kerberos Service Name","order":73,"inputType":"TEXT_BOX","description":"The Kerberos principal name that Kafka runs as","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.service.name","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"kerberosKinitCommand","typeAsString":"java.lang.String","displayName":"Kerberos KInit Command","order":81,"inputType":"TEXT_BOX","description":"Kerberos kinit command path","placeHolder":"/usr/bin/kinit","validator":".*","currentValue":"/usr/bin/kinit","originalValue":"/usr/bin/kinit","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.kinit.cmd","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"kerberosMinTimeBeforeRelogin","typeAsString":"long","displayName":"Kerberos Minimum Time Before Re-login","order":82,"inputType":"TEXT_BOX","description":"Login thread sleep time in milliseconds between refresh attempts","placeHolder":"60,000","validator":".*","currentValue":"60000","originalValue":"60000","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.min.time.before.relogin","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"kerberosTicketRenewJitter","typeAsString":"double","displayName":"Kerberos Ticket Renew Jitter","order":83,"inputType":"TEXT_BOX","description":"Percentage of random jitter added to the renewal time","placeHolder":"0.05","validator":".*","currentValue":"0.05","originalValue":"0.05","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.ticket.renew.jitter","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"kerberosTicketRenewWindowFactor","typeAsString":"double","displayName":"Kerberos Ticket Renew Window Factor","order":84,"inputType":"TEXT_BOX","description":"Login thread will sleep until the specified window factor of time from last refresh to ticket's expiry has been reached, at which time it will try to renew the ticket","placeHolder":"0.8","validator":".*","currentValue":"0.8","originalValue":"0.8","isExternalized":false,"category":"Kerberos","propertyName":"sasl.kerberos.ticket.renew.window.factor","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"metricsReporters","typeAsString":"java.lang.String","displayName":"Metrics Reporters","order":120,"inputType":"TEXT_BOX","description":"A list of classes to use as metrics reporters. Implementing the MetricReporter interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Metrics","propertyName":"metric.reporters","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"metricsSampleCount","typeAsString":"int","displayName":"Sample Count","order":121,"inputType":"TEXT_BOX","description":"The number of samples maintained to compute metrics","placeHolder":"2","validator":".*","currentValue":"2","originalValue":"2","isExternalized":false,"category":"Metrics","propertyName":"metrics.num.samples","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"metricsRecordingLevel","typeAsString":"java.lang.String","displayName":"Recording Level","order":122,"inputType":"SELECT","description":"The highest recording level for metrics","placeHolder":"","validator":".*","currentValue":"INFO","originalValue":"INFO","isExternalized":false,"category":"Metrics","propertyName":"metrics.recording.level","isOptional":true,"possibleValues":["INFO","DEBUG"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"metricsSampleWindow","typeAsString":"long","displayName":"Sample Window","order":123,"inputType":"TEXT_BOX","description":"The window of time in milliseconds a metrics sample is computed over","placeHolder":"30000","validator":".*","currentValue":"30000","originalValue":"30000","isExternalized":false,"category":"Metrics","propertyName":"metrics.sample.window.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"sessionTimeoutMillis","typeAsString":"int","displayName":"Session Timeout","order":50,"inputType":"TEXT_BOX","description":"The session timeout in milliseconds of the Kafka connection","placeHolder":"10000","validator":".*","currentValue":"10000","originalValue":"10000","isExternalized":false,"category":"Network","propertyName":"session.timeout.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"requestTimeoutMillis","typeAsString":"int","displayName":"Request Timeout","order":51,"inputType":"TEXT_BOX","description":"The configuration controls the maximum amount of time in milliseconds the client will wait for the response of a request","placeHolder":"305000","validator":".*","currentValue":"305000","originalValue":"305000","isExternalized":false,"category":"Network","propertyName":"request.timeout.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"heartBeatIntervalMillis","typeAsString":"int","displayName":"Heart Beat Interval","order":52,"inputType":"TEXT_BOX","description":"The expected time (in milliseconds) between heartbeats to the consumer coordinator when using Kafka's group management facilities","placeHolder":"3000","validator":".*","currentValue":"3000","originalValue":"3000","isExternalized":false,"category":"Network","propertyName":"heartbeat.interval.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"connectionMaxIdleMillis","typeAsString":"long","displayName":"Connection Maximum Idle Time","order":53,"inputType":"TEXT_BOX","description":"Close idle connections after the number of milliseconds specified by this config","placeHolder":"540000","validator":".*","currentValue":"540000","originalValue":"540000","isExternalized":false,"category":"Network","propertyName":"connections.max.idle.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"fetchMinBytes","typeAsString":"int","displayName":"Minimum Fetch Bytes","order":54,"inputType":"TEXT_BOX","description":"The minimum amount of data the server should return for a fetch request. If insufficient data is available the request will wait for that much data to accumulate before answering the request","placeHolder":"1","validator":".*","currentValue":"1","originalValue":"1","isExternalized":false,"category":"Network","propertyName":"fetch.min.bytes","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"fetchMaxBytes","typeAsString":"int","displayName":"Maximum Fetch Bytes","order":55,"inputType":"TEXT_BOX","description":"The maximum amount of data the server should return for a fetch request","placeHolder":"52428800","validator":".*","currentValue":"52428800","originalValue":"52428800","isExternalized":false,"category":"Network","propertyName":"fetch.max.bytes","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"maxPartitionFetchBytes","typeAsString":"int","displayName":"Maximum Bytes Fetch per Partition","order":56,"inputType":"TEXT_BOX","description":"The maximum amount of data per-partition the server will return","placeHolder":"1048576","validator":".*","currentValue":"1048576","originalValue":"1048576","isExternalized":false,"category":"Network","propertyName":"max.partition.fetch.bytes","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"receiveBufferBytes","typeAsString":"int","displayName":"Receive Buffer Size","order":57,"inputType":"TEXT_BOX","description":"The size of the TCP receive buffer (SO_RCVBUF) in bytes to use when reading data. If the value is -1, the OS default will be used","placeHolder":"65536","validator":".*","currentValue":"65536","originalValue":"65536","isExternalized":false,"category":"Network","propertyName":"receive.buffer.bytes","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sendBufferBytes","typeAsString":"int","displayName":"Send Buffer Size","order":58,"inputType":"TEXT_BOX","description":"The size of the TCP send buffer (SO_SNDBUF) in bytes to use when sending data. If the value is -1, the OS default will be used","placeHolder":"131072","validator":".*","currentValue":"131072","originalValue":"131072","isExternalized":false,"category":"Network","propertyName":"send.buffer.bytes","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"fetchMaxWaitMillis","typeAsString":"int","displayName":"Fetch Maximum Wait Time","order":59,"inputType":"TEXT_BOX","description":"The maximum amount of time in milliseconds the server will block before answering the fetch request if there isn't sufficient data to immediately satisfy the requirement given by fetch.min.bytes","placeHolder":"500","validator":".*","currentValue":"500","originalValue":"500","isExternalized":false,"category":"Network","propertyName":"fetch.max.wait.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"reconnectBackOff","typeAsString":"long","displayName":"Reconnect Back-Off","order":60,"inputType":"TEXT_BOX","description":"The base amount of time in milliseconds to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker","placeHolder":"50","validator":".*","currentValue":"50","originalValue":"50","isExternalized":false,"category":"Network","propertyName":"reconnect.backoff.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"reconnectBackOffMax","typeAsString":"long","displayName":"Maximum Reconnect Back-Off","order":61,"inputType":"TEXT_BOX","description":"The maximum amount of time in milliseconds to wait when re-connecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms","placeHolder":"1000","validator":".*","currentValue":"1000","originalValue":"1000","isExternalized":false,"category":"Network","propertyName":"reconnect.backoff.max.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"retryBackOff","typeAsString":"long","displayName":"Retry Back-Off","order":62,"inputType":"TEXT_BOX","description":"The amount of time in milliseconds to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios","placeHolder":"100","validator":".*","currentValue":"100","originalValue":"100","isExternalized":false,"category":"Network","propertyName":"retry.backoff.ms","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"sslTruststoreLocation","typeAsString":"java.lang.String","displayName":"Trust Keystore Location","order":100,"inputType":"TEXT_BOX","description":"The location of the trust store file","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.truststore.location","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslTruststorePassword","typeAsString":"java.lang.String","displayName":"Trust Keystore Password","order":101,"inputType":"SECURE","description":"The password for the trust store file","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.truststore.password","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslTruststoreType","typeAsString":"java.lang.String","displayName":"Trust Keystore Type","order":102,"inputType":"TEXT_BOX","description":"The file format of the trust store file","placeHolder":"JKS","validator":".*","currentValue":"JKS","originalValue":"JKS","isExternalized":false,"category":"SSL","propertyName":"ssl.truststore.type","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeystoreLocatin","typeAsString":"java.lang.String","displayName":"Identity Keystore Location","order":103,"inputType":"TEXT_BOX","description":"The location of the key store file used for two-way authentication for client","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.keystore.location","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeystorePassword","typeAsString":"java.lang.String","displayName":"Identity Keystore Password","order":104,"inputType":"SECURE","description":"The store password for the key store file","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.keystore.password","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeystoreType","typeAsString":"java.lang.String","displayName":"Identity Keystore Type","order":105,"inputType":"TEXT_BOX","description":"The file format of the key store file","placeHolder":"JKS","validator":".*","currentValue":"JKS","originalValue":"JKS","isExternalized":false,"category":"SSL","propertyName":"ssl.keystore.type","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeyPassword","typeAsString":"java.lang.String","displayName":"Identity Key Password","order":106,"inputType":"SECURE","description":"The password of the private key in the key store file","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.key.password","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"enabledSSLProtocols","typeAsString":"java.lang.String","displayName":"Enabled SSL Protocols","order":107,"inputType":"TEXT_BOX","description":"A comma separated list of protocols enabled for SSL connections from TLSv1, TLSv1.1 and TLSv1.2, SSLv1, SSLv2 and SSLv3","placeHolder":"TLSv1.2,TLSv1.1,TLSv1","validator":".*","currentValue":"TLSv1.2,TLSv1.1,TLSv1","originalValue":"TLSv1.2,TLSv1.1,TLSv1","isExternalized":false,"category":"SSL","propertyName":"ssl.enabled.protocols","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslProtocol","typeAsString":"java.lang.String","displayName":"SSL Protocol","order":108,"inputType":"TEXT_BOX","description":"The SSL protocol used to generate the SSLContext. Default setting is TLS, which is fine for most cases. Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities","placeHolder":"TLS","validator":".*","currentValue":"TLS","originalValue":"TLS","isExternalized":false,"category":"SSL","propertyName":"ssl.protocol","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslProvider","typeAsString":"java.lang.String","displayName":"SSL Provider","order":109,"inputType":"TEXT_BOX","description":"The name of the security provider used for SSL connections. Default value is the default security provider of the JVM","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.provider","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslCipherSuites","typeAsString":"java.lang.String","displayName":"SSL Cipher Suites","order":110,"inputType":"TEXT_BOX","description":"A comma separated list of cipher suites. This is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. By default all the available cipher suites are supported","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.cipher.suites","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslEndpointIdentificationAlgorithm","typeAsString":"java.lang.String","displayName":"Endpoint Identification Algorithm","order":111,"inputType":"TEXT_BOX","description":"The endpoint identification algorithm to validate server hostname using server certificate","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.endpoint.identification.algorithm","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslKeymanagerAlgorithm","typeAsString":"java.lang.String","displayName":"Key Manager Algorithm","order":112,"inputType":"TEXT_BOX","description":"The algorithm used by key manager factory for SSL connections. Default value is the key manager factory algorithm configured for the Java Virtual Machine","placeHolder":"SunX509","validator":".*","currentValue":"SunX509","originalValue":"SunX509","isExternalized":false,"category":"SSL","propertyName":"ssl.keymanager.algorithm","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslTrustmanagerAlgorithm","typeAsString":"java.lang.String","displayName":"Trust Manager Algorithm","order":113,"inputType":"TEXT_BOX","description":"The algorithm used by trust manager factory for SSL connections. Default value is the trust manager factory algorithm configured for the Java Virtual Machine","placeHolder":"PKIX","validator":".*","currentValue":"PKIX","originalValue":"PKIX","isExternalized":false,"category":"SSL","propertyName":"ssl.trustmanager.algorithm","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"sslSecureRandomImplementation","typeAsString":"java.lang.String","displayName":"Secure Random Implementation","order":114,"inputType":"TEXT_BOX","description":"The SecureRandom PRNG implementation to use for SSL cryptography operations","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"SSL","propertyName":"ssl.secure.random.implementation","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}],[{"name":"securityProtocol","typeAsString":"java.lang.String","displayName":"Security Protocol","order":70,"inputType":"SELECT","description":"Security protocol used to communicate with brokers","placeHolder":"","validator":".*","currentValue":"PLAINTEXT","originalValue":"PLAINTEXT","isExternalized":false,"category":"Security","propertyName":"security.protocol","isOptional":true,"possibleValues":["PLAINTEXT","SSL","SASL_PLAINTEXT","SASL_SSL"],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"saslMechanism","typeAsString":"java.lang.String","displayName":"SASL Mechanism","order":71,"inputType":"TEXT_BOX","description":"SASL mechanism used for client connections. This may be any mechanism for which a security provider is available","placeHolder":"GSSAPI","validator":".*","currentValue":"GSSAPI","originalValue":"GSSAPI","isExternalized":false,"category":"Security","propertyName":"sasl.mechanism","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"jaasConfig","typeAsString":"java.lang.String","displayName":"JAAS Config","order":72,"inputType":"SECURE","description":"JAAS login context parameters for SASL connections in the format used by JAAS configuration files","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Security","propertyName":"sasl.jaas.config","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}]],"attrs":{".label":{"text":"","ref-y":0.3},"image":{"ref-x":0,"ref-y":0,"width":80,"height":80,"xlink:href":"https://developer.adroitlogic.com/ultrastudio/icons/default/kafka_ingress_connector.svg","transform":"rotate(-0.0 40 40)"},".component-tooltip":{"text":"Kafka Ingress Connector"},".outPorts>.port0>.port-label":{"text":""},".outPorts>.port0>.port-tooltip":{"text":"Processor"},".outPorts>.port0>.port-body":{"port":{"id":"Processor","type":"out","targetElementType":"ProcessingElement","description":"Returns the message received to the Ingress Connector","sourceFieldName":"processingElement"}},".outPorts>.port0":{"ref":".body","ref-y":0.25,"ref-dx":0},".outPorts>.port1>.port-label":{"text":""},".outPorts>.port1>.port-tooltip":{"text":"On Exception"},".outPorts>.port1>.port-body":{"port":{"id":"On Exception","type":"out","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}},".outPorts>.port1":{"ref":".body","ref-y":0.75,"ref-dx":0}}},{"type":"ProcessingElement","position":{"x":560,"y":240},"size":{"width":80,"height":80},"inPorts":["Input"],"outPorts":[{"id":"Next","targetElementType":"ProcessingElement","description":"Next processing element","sourceFieldName":"nextElement"},{"id":"On Exception","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}],"sidePorts":[],"angle":0,"id":"b53b6bf6-7241-46e5-87ca-6bcfa5e19e3e","displayName":"XPath String Extractor","className":"org.adroitlogic.x.processor.xml.xpath.XPathExtractProcessor","componentId":"news-id-extractor","componentType":"ProcessingElement","icon":"xpath_string_extractor_processor","configurationRequired":true,"z":2,"fieldsList":[[{"name":"_componentId","typeAsString":"java.lang.String","displayName":"Component Id","order":"0","inputType":"TEXT_BOX","description":"Id of the component","placeHolder":"","validator":".*","currentValue":"news-id-extractor","originalValue":"news-id-extractor","isExternalized":false,"category":"Basic","propertyName":"","isOptional":false,"possibleValues":[],"isDisabled":true,"hideOnDependentPropValue":{},"showOnDependentPropValue":{},"dependentPropertyName":"","isHidden":false},{"name":"variableName","typeAsString":"java.lang.String","displayName":"Variable Name","order":1,"inputType":"TEXT_BOX","description":"Variable name to store extracted value from the message","placeHolder":"","validator":".*","currentValue":"id","originalValue":"id","isExternalized":false,"category":"Basic","propertyName":"variableName","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"xpath","typeAsString":"java.lang.String","displayName":"XPath","order":2,"inputType":"TEXT_BOX","description":"XPath to extract the string value from the message payload","placeHolder":"","validator":".*","currentValue":"/message/id","originalValue":"/message/id","isExternalized":false,"category":"Basic","propertyName":"xpath","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}},{"name":"namespaces","typeAsString":"java.util.Map","displayName":"Namespaces","order":3,"inputType":"STRING_MAP","description":"An optional map with namespace prefixes (as keys) and namespaces (as values) used within the XPath expression","placeHolder":"","validator":".*","currentValue":"","originalValue":"","isExternalized":false,"category":"Basic","propertyName":"","isOptional":true,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}]],"attrs":{".label":{"text":"","ref-y":0.3},"image":{"ref-x":0,"ref-y":0,"width":80,"height":80,"xlink:href":"https://developer.adroitlogic.com/ultrastudio/icons/default/xpath_string_extractor_processor.svg","transform":"rotate(-0.0 40 40)"},".component-tooltip":{"text":"XPath String Extractor"},".inPorts>.port0>.port-label":{"text":""},".inPorts>.port0>.port-body":{"port":{"id":"in14","type":"in"}},".inPorts>.port0":{"ref":".body","ref-y":0.5},".outPorts>.port0>.port-label":{"text":""},".outPorts>.port0>.port-tooltip":{"text":"Next"},".outPorts>.port0>.port-body":{"port":{"id":"Next","type":"out","targetElementType":"ProcessingElement","description":"Next processing element","sourceFieldName":"nextElement"}},".outPorts>.port0":{"ref":".body","ref-y":0.25,"ref-dx":0},".outPorts>.port1>.port-label":{"text":""},".outPorts>.port1>.port-tooltip":{"text":"On Exception"},".outPorts>.port1>.port-body":{"port":{"id":"On Exception","type":"out","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}},".outPorts>.port1":{"ref":".body","ref-y":0.75,"ref-dx":0}}},{"type":"ProcessingElement","position":{"x":720,"y":240},"size":{"width":80,"height":80},"inPorts":["Input"],"outPorts":[{"id":"On Exception","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}],"sidePorts":[],"angle":0,"id":"77fa2eac-8a34-4f66-8e0f-7a30c6462434","displayName":"Impression Injector","className":"org.adroitlogic.x.sample.processors.custom.ImpressionInjector","componentId":"news-read-injector","componentType":"ProcessingElement","icon":"default","configurationRequired":false,"z":3,"fieldsList":[[{"name":"_componentId","typeAsString":"java.lang.String","displayName":"Component Id","order":"0","inputType":"TEXT_BOX","description":"Id of the component","placeHolder":"","validator":".*","currentValue":"news-read-injector","originalValue":"news-read-injector","isExternalized":false,"category":"Basic","propertyName":"","isOptional":false,"possibleValues":[],"isDisabled":true,"hideOnDependentPropValue":{},"showOnDependentPropValue":{},"dependentPropertyName":"","isHidden":false},{"name":"newsId","typeAsString":"java.lang.String","displayName":"News ID","order":1,"inputType":"TEXT_BOX","description":"Unique news ID, which needs to be updated for the impression. This can be a plain text static string or any combination of @{message.headers.<name>}, @{message.properties.<name>}, @{variable.<name>}, @{current.timestamp.<timestamp_format>} and @{message.id}","placeHolder":"","validator":".*","currentValue":"@{variable.id}","originalValue":"@{variable.id}","isExternalized":false,"category":"Basic","propertyName":"newsId","isOptional":false,"possibleValues":[],"isDisabled":false,"dependentPropertyName":"","isHidden":false,"showOnDependentPropValue":{},"hideOnDependentPropValue":{}}]],"attrs":{".label":{"text":"","ref-y":0.3},"image":{"ref-x":0,"ref-y":0,"width":80,"height":80,"xlink:href":"https://developer.adroitlogic.com/ultrastudio/icons/default/default.svg","transform":"rotate(-0.0 40 40)"},".component-tooltip":{"text":"Impression Injector"},".inPorts>.port0>.port-label":{"text":""},".inPorts>.port0>.port-body":{"port":{"id":"in19","type":"in"}},".inPorts>.port0":{"ref":".body","ref-y":0.5},".outPorts>.port0>.port-label":{"text":""},".outPorts>.port0>.port-tooltip":{"text":"On Exception"},".outPorts>.port0>.port-body":{"port":{"id":"On Exception","type":"out","targetElementType":"ProcessingElement","description":"Invoked in case of an error in executing within the current element","sourceFieldName":"errorHandler"}},".outPorts>.port0":{"ref":".body","ref-y":0.5,"ref-dx":0}}},{"type":"link","source":{"id":"51dc01de-80a7-42e0-b4c9-a24be8a349c4","port":"Processor"},"target":{"id":"b53b6bf6-7241-46e5-87ca-6bcfa5e19e3e","port":"in14"},"router":{"name":"manhattan"},"connector":{"name":"rounded"},"id":"7a3cd8a0-6fc1-4ab5-8193-ab37c56d78c4","embeds":"","z":4,"attrs":{".marker-target":{"d":"M 10 0 L 0 5 L 10 10 z"},".connection":{"stroke":"#95a5a6","stroke-width":1}}},{"type":"link","source":{"id":"b53b6bf6-7241-46e5-87ca-6bcfa5e19e3e","port":"Next"},"target":{"id":"77fa2eac-8a34-4f66-8e0f-7a30c6462434","port":"in19"},"router":{"name":"manhattan"},"connector":{"name":"rounded"},"id":"870a32ff-324f-437b-a528-3cb96bc18803","embeds":"","z":5,"attrs":{".marker-target":{"d":"M 10 0 L 0 5 L 10 10 z"},".connection":{"stroke":"#95a5a6","stroke-width":1}}}]}